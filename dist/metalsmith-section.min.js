const debug=require("debug")("metalsmith:section"),multimatch=require("multimatch");module.exports=plugin;function plugin(a){return a=a||{},a.pattern=a.pattern||["**/*.html"],a.prefix=a.prefix||"section:::",a.removeFromContents=a.removeFromContents||!0,a.metaDataKey=a.metaDataKey||"sections",debug("myplugin options: %s",JSON.stringify(a)),function(b,c,d){setImmediate(d),Object.keys(b).forEach((c)=>{if(multimatch(c,a.pattern).length){const d=b[c];debug("converting file: %s",c,a.prefix);const e=new RegExp(`<.*>${a.prefix}`,"g"),f=d.contents.toString(),g=f.split(e);if(1>=g.length)return;d[a.metaDataKey]={},a.removeFromContents&&(debug("remaining content:",g[0]),b[c].contents=Buffer.from(g[0]));for(let b=1;b+1<=g.length;b+=1){const c=g[b],e=c.match(/^(.*?)<\/.*>/)[1].trim(),f=c.replace(/^(.*?)<\/.*>/,"").trim();if(d[a.metaDataKey][e]){const b=d[a.metaDataKey][e];"string"==typeof b?d[a.metaDataKey][e]=[b,f]:Array.isArray(b)&&d[a.metaDataKey][e].push(f)}else d[a.metaDataKey][e]=f;debug(e,f)}}})}}